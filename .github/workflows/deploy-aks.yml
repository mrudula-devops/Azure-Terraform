name: Deploy AKS with Debugging

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Apply with Debugging
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_LOG: DEBUG  # Enables Terraform debugging logs
      ACTIONS_RUNNER_DEBUG: true  # Enables GitHub Actions debugging logs

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: |
          terraform init | tee terraform-init.log
          cat terraform-init.log  # Display logs for debugging

      - name: Terraform Validate
        run: |
          terraform validate | tee terraform-validate.log
          cat terraform-validate.log  # Display logs for debugging

      - name: Terraform Plan
        run: |
          terraform plan -var="azure_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
                         -var="azure_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
                         -var="azure_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
                         -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" | tee terraform-plan.log
          cat terraform-plan.log  # Display logs for debugging
        continue-on-error: true  # Prevents pipeline from stopping

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -var="azure_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
                                      -var="azure_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
                                      -var="azure_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
                                      -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" | tee terraform-apply.log
        continue-on-error: true  # Ensures Terraform Apply logs are captured even if it fails

      - name: Display Terraform Apply Logs
        if: always()  # Always run this step even if Apply fails
        run: cat terraform-apply.log || echo "Terraform Apply log file not found!"
